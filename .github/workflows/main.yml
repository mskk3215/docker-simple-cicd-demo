name: Deploy Simple CI/CD

on:
  push: # Trigger the workflow on push events
    branches: ["main"]
env:
  AWS_REGION: us-east-1
  ECS_SERVICE: simple-cicd-service
  ECS_CLUSTER: cicd-cluster-udemy
  ECS_TASK_DEFINITION: .aws/task-definition.json

permissions:
  contents: read

jobs:
  # WEB Container Build/Test
  web-test-build-image: # title of the job
    name: Web Container - Test and Build # name of GitHub Action
    runs-on: ubuntu-20.04 # environment for job to run on
    timeout-minutes: 10
    defaults:
      run:
        working-directory: web

    steps:
      - uses: actions/checkout@v3 # checkout the repo
      ## Build/Test and Docker Image Build
      - name: Build an Image and Run Tests
        run: |
          docker image build --target production -t temp_web_image_name:latest --build-arg REACT_APP_API_SERVER=/api .
      ## Login AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ## Push image to ECR
      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_WEB_SERVER_REPOSITORY }}
        run: |
          docker image tag temp_web_image_name:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  # API Container Build/Test
  api-test-build-image:
    name: API Container - Test and Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v3
      ## Build/Test
      - name: Build an Image and Run Tests
        run: |
          docker image build --target production -t temp_api_image_name:latest .
      ## Login AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ## Push image to ECR
      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_API_SERVER_REPOSITORY }}
        run: |
          docker image tag temp_api_image_name:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
